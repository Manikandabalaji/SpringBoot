package com.tcs;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.concurrent.CopyOnWriteArrayList;
import java.util.*;
import java.util.concurrent.CopyOnWriteArrayList;

import org.jasypt.encryption.pbe.StandardPBEStringEncryptor;
public class Jasypt 
{
	
	public static void main(String[] args) {
	
		 
		
		  Scanner sc=new Scanner(System.in);
		  
		        
		        int n = sc.nextInt();
		        
		        ArrayList<String> list=new ArrayList<String>();
		        list.add("ABC");
		        list.add("ABSG");
		        for(String s:list)
		        {
		        	int n1 = s.length();
		       permute(s, 0, n1-1); 
		    
	    
		  
		        }
		        
		     
		
	}
	  public static void permute(String str, int l, int r) 
	    { 
	        if (l == r) 
	            System.out.println(str); 
	        else
	        { 
	            for (int i = l; i <= r; i++) 
	            { 
	                str = swap(str,l,i); 
	                permute(str, l+1, r); 
	                str = swap(str,l,i); 
	            } 
	        } 
	    }
	  
	    public static String swap(String a, int i, int j) 
	    { 
	        char temp; 
	        char[] charArray = a.toCharArray(); 
	        temp = charArray[i] ; 
	        charArray[i] = charArray[j]; 
	        charArray[j] = temp; 
	        return String.valueOf(charArray); 
	    } 
	
	    
}
